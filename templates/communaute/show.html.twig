{% extends 'base.html.twig' %}

{% block title %}Community: {{ communaute.nom }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .message-content {
            max-width: 75%;
            display: inline-block;
        }
        .messages {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }
        .chat-container {
            height: calc(100vh - 100px);
            overflow-y: auto;
        }
        .poll-card {
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            margin-bottom: 1rem;
        }
        .progress {
            background-color: #e9ecef;
            border-radius: 0.25rem;
        }
        .progress-bar {
            background-color: #007bff;
            color: white;
            text-align: center;
            font-size: 0.875rem;
            line-height: 20px;
            white-space: nowrap;
        }
        .badge-active {
            background-color: #28a745;
            color: white;
        }
        .badge-closed {
            background-color: #6c757d;
            color: white;
        }
        .polls-sidebar {
            position: fixed;
            right: 0;
            top: 0;
            height: 100vh;
            width: 300px;
            background: white;
            box-shadow: -2px 0 5px rgba(0,0,0,0.1);
            transform: translateX(100%);
            transition: transform 0.3s ease;
            z-index: 1000;
            padding: 1rem;
            overflow-y: auto;
        }
        .polls-sidebar.show {
            transform: translateX(0);
        }
        .toggle-polls {
            position: fixed;
            right: 20px;
            bottom: 20px;
            z-index: 1001;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="container-fluid mt-4">
        <div class="row">
            <!-- Community Info Sidebar -->
            <div class="col-md-3">
                <div class="card mb-4">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h3 class="h4 mb-0">{{ communaute.nom }}</h3>
                    </div>
                    <div class="card-body">
                        <div class="mb-4">
                            <h5>Description</h5>
                            <p>{{ communaute.description }}</p>
                        </div>

                        <div class="mb-4">
                            <h5>Details</h5>
                            <ul class="list-unstyled">
                                <li><strong>Created:</strong> {{ communaute.date_creation|date('Y-m-d H:i:s') }}</li>
                                <li><strong>Hackathon:</strong> {{ communaute.id_hackathon ? communaute.id_hackathon.nom_hackathon : 'None' }}</li>                            </ul>
                        </div>

                        <div class="d-flex justify-content-between">
                            <a href="{{ path('app_communaute_edit', {'id': communaute.id}) }}" class="btn btn-warning">Edit</a>
                            <form method="post" action="{{ path('app_communaute_delete', {'id': communaute.id}) }}" style="display: inline-block" onsubmit="return confirm('Are you sure you want to delete this community?');">
                                <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ communaute.id) }}">
                                <button class="btn btn-danger">Delete</button>
                            </form>
                        </div>
                    </div>
                </div>

                <div class="card">
                    <div class="card-header">
                        <h4 class="h5 mb-0">Available Chats</h4>
                    </div>
                    <div class="list-group list-group-flush">
                        {% for chat in communaute.chats %}
                            <a href="#" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center chat-link" 
                               data-chat-id="{{ chat.id }}"
                               data-chat-name="{{ chat.nom }}"
                               data-chat-type="{{ chat.type }}">
                                {{ chat.nom }}
                                <span class="badge bg-primary rounded-pill">{{ chat.type }}</span>
                            </a>
                        {% endfor %}
                    </div>
                </div>

                <div class="mt-3">
                    <a href="{{ path('app_communaute_index') }}" class="btn btn-secondary w-100">Back to Communities</a>
                </div>
            </div>

            <!-- Chat Area -->
            <div class="col-md-9">
                <div id="chat-container" class="card">
                            <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                        <h4 class="mb-0" id="current-chat-name">Select a chat to start</h4>
                        <button type="button" class="btn btn-light btn-sm" data-bs-toggle="modal" data-bs-target="#createPollModal" id="create-poll-btn" style="display: none;">
                            <i class="fas fa-poll"></i> Create Poll
                        </button>
                    </div>
                    <div class="card-body">
                        <div id="messages-container" style="max-height: 600px; overflow-y: auto;">
                            <p class="text-center text-muted">Select a chat from the list to view messages</p>
                                </div>

                        <form id="message-form" class="mt-3" style="display: none;">
                            <div class="form-group">
                                <textarea class="form-control" name="contenu" rows="2" placeholder="Type your message..." required></textarea>
                            </div>
                            <div class="form-group mt-2">
                                <select class="form-control" name="type">
                                            <option value="QUESTION">Question</option>
                                            <option value="REPONSE">Response</option>
                                            <option value="SUGGESTION">Suggestion</option>
                                        </select>
                            </div>
                            <button type="submit" class="btn btn-primary mt-2">Send Message</button>
                        </form>
                        </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Polls Sidebar -->
    <div class="polls-sidebar" id="polls-sidebar">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h5 class="card-title mb-0">Polls</h5>
            <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#createPollModal">
                <i class="fas fa-plus"></i> New Poll
            </button>
        </div>
        <div id="polls-container">
            <!-- Polls will be loaded here dynamically -->
        </div>
    </div>

    <!-- Toggle Polls Button -->
    <button class="btn btn-primary toggle-polls" id="toggle-polls">
        <i class="fas fa-poll"></i>
    </button>

    <!-- Create Poll Modal -->
    <div class="modal fade" id="createPollModal" tabindex="-1" aria-labelledby="createPollModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="createPollModalLabel">Create New Poll</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="create-poll-form">
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="question" class="form-label">Poll Question</label>
                            <input type="text" class="form-control" id="question" name="question" required>
                        </div>
                        <div id="pollOptions" class="mb-3">
                            <div class="mb-2">
                                <label class="form-label">Option 1</label>
                                <input type="text" class="form-control" name="options[]" required>
                            </div>
                            <div class="mb-2">
                                <label class="form-label">Option 2</label>
                                <input type="text" class="form-control" name="options[]" required>
                            </div>
                        </div>
                        <button type="button" class="btn btn-secondary btn-sm" onclick="addOption()">
                            <i class="fas fa-plus"></i> Add Option
                        </button>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Create Poll</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        let currentChatId = null;

        // Toggle polls sidebar
        document.getElementById('toggle-polls').addEventListener('click', function() {
            document.getElementById('polls-sidebar').classList.toggle('show');
        });

        // Handle chat selection
        document.querySelectorAll('.chat-link').forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                const chatId = this.dataset.chatId;
                const chatName = this.dataset.chatName;
                currentChatId = chatId;
                
                // Update UI
                document.getElementById('current-chat-name').textContent = chatName;
                document.getElementById('message-form').style.display = 'block';
                document.getElementById('create-poll-btn').style.display = 'block';
                
                // Load messages and polls
                loadChatContent(chatId);
            });
        });

        // Load all chat content (messages and polls)
        function loadChatContent(chatId) {
            Promise.all([
                fetch(`/chat/${chatId}/messages`).then(response => response.json()),
                fetch(`/chat/${chatId}/polls`).then(response => response.json())
            ]).then(([messagesData, pollsData]) => {
                const container = document.getElementById('messages-container');
                container.innerHTML = '';
                
                // Combine messages and polls into a single array with timestamps
                const allContent = [
                    ...messagesData.messages.map(msg => ({
                        type: 'message',
                        timestamp: new Date(msg.post_time),
                        content: msg
                    })),
                    ...pollsData.polls.map(poll => ({
                        type: 'poll',
                        timestamp: new Date(poll.created_at),
                        content: poll
                    }))
                ];

                // Sort by timestamp
                allContent.sort((a, b) => b.timestamp - a.timestamp);

                if (allContent.length === 0) {
                    container.innerHTML = '<p class="text-center text-muted">No content yet.</p>';
                    return;
                }

                allContent.forEach(item => {
                    if (item.type === 'message') {
                        container.innerHTML += createMessageHTML(item.content);
                    } else {
                        container.innerHTML += createPollHTML(item.content);
                    }
                });
            });
        }

        // Create message HTML
        function createMessageHTML(message) {
            return `
                <div class="message mb-3">
                    <div class="d-flex justify-content-between">
                        <strong>${message.posted_by.nom} ${message.posted_by.prenom}</strong>
                        <small class="text-muted">${new Date(message.post_time).toLocaleString()}</small>
                    </div>
                    <p class="mb-1">${message.contenu}</p>
                    <small class="text-muted">Type: ${message.type}</small>
                </div>
            `;
        }

        // Create poll HTML
        function createPollHTML(poll) {
            let optionsHTML = '';
            let totalVotes = 0;
            
            poll.poll_option.forEach(option => {
                totalVotes += option.vote_count || 0;
            });

            poll.poll_option.forEach(option => {
                const voteCount = option.vote_count || 0;
                const percentage = totalVotes > 0 ? (voteCount / totalVotes * 100).toFixed(1) : 0;
                optionsHTML += `
                    <div class="poll-option mb-3">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <div class="form-check">
                                <input class="form-check-input" type="radio" 
                                       name="option_id" 
                                       value="${option.id}" 
                                       id="option${option.id}"
                                       required
                                       ${poll.is_closed ? 'disabled' : ''}>
                                <label class="form-check-label" for="option${option.id}">
                                    ${option.text}
                                </label>
                            </div>
                        </div>
                        <div class="progress" style="height: 20px;">
                            <div class="progress-bar" role="progressbar" 
                                 style="width: ${percentage}%;" 
                                 aria-valuenow="${percentage}" 
                                 aria-valuemin="0" 
                                 aria-valuemax="100">
                                ${voteCount} votes (${percentage}%)
                            </div>
                        </div>
                    </div>
                `;
            });

            return `
                <div class="poll-card mb-3">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h6 class="mb-0">${poll.question}</h6>
                        <div>
                            <small class="text-muted me-2">${new Date(poll.created_at).toLocaleString()}</small>
                            <span class="badge ${poll.is_closed ? 'badge-closed' : 'badge-active'}">
                                ${poll.is_closed ? 'Closed' : 'Active'}
                            </span>
                        </div>
                    </div>
                    <div class="card-body">
                        <form class="poll-form" onsubmit="return handleVote(event, ${poll.id})">
                            <div class="poll-options">
                                ${optionsHTML}
                            </div>
                            ${!poll.is_closed ? `
                                <div class="d-flex justify-content-between mt-3">
                                    <button type="submit" class="btn btn-primary">Vote</button>
                                    <button type="button" class="btn btn-secondary" onclick="closePoll(${poll.id})">Close Poll</button>
                                </div>
                            ` : '<p class="text-muted mt-2">This poll is closed</p>'}
                        </form>
                    </div>
                </div>
            `;
        }

        // Handle message form submission
        document.getElementById('message-form').addEventListener('submit', function(e) {
            e.preventDefault();
            if (!currentChatId) return;

            const formData = new FormData(this);
            fetch(`/chat/${currentChatId}/message/new`, {
                method: 'POST',
                body: formData
            })
            .then(response => {
                if (response.ok) {
                    this.reset();
                    loadChatContent(currentChatId);
                }
            });
        });

        // Handle poll creation
        document.getElementById('create-poll-form').addEventListener('submit', function(e) {
            e.preventDefault();
            if (!currentChatId) return;

            const formData = new FormData(this);
            fetch(`/chat/${currentChatId}/poll/new`, {
                method: 'POST',
                body: formData
            })
            .then(response => {
                if (response.ok) {
                    this.reset();
                    loadChatContent(currentChatId);
                    bootstrap.Modal.getInstance(document.getElementById('createPollModal')).hide();
                }
            });
        });

        // Handle voting
        function handleVote(event, pollId) {
            event.preventDefault();
            const form = event.target;
            const optionId = form.querySelector('input[name="option_id"]:checked')?.value;
            
            if (!optionId) {
                alert('Please select an option before voting.');
                return false;
            }

            fetch(`/poll/${pollId}/vote`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ option_id: optionId })
            })
            .then(response => {
                if (response.ok) {
                    loadChatContent(currentChatId);
                }
            });

            return false;
        }

        // Close poll
        function closePoll(pollId) {
            if (confirm('Are you sure you want to close this poll?')) {
                fetch(`/poll/${pollId}/close`, {
                    method: 'POST'
                })
                .then(response => {
                    if (response.ok) {
                        loadChatContent(currentChatId);
                    }
                });
            }
        }

        // Add poll option
        function addOption() {
            const container = document.getElementById('pollOptions');
            const optionCount = container.children.length + 1;
            const div = document.createElement('div');
            div.className = 'mb-2';
            div.innerHTML = `
                <label class="form-label">Option ${optionCount}</label>
                <input type="text" class="form-control" name="options[]" required>
            `;
            container.appendChild(div);
        }
    </script>
{% endblock %} 
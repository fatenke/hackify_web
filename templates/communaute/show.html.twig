{% extends 'base.html.twig' %}

{% block title %}Community: {{ communaute.nom }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        /* Dark Modern Banner and Countdown Styling */
        .community-banner {
            background-color: #13071d;
            color: #ffffff;
            padding: 2rem 0;
            margin-bottom: 2rem;
        }
        
        .welcome-title {
            color: #e9c7ff;
            font-weight: 400;
            margin-bottom: 0.5rem;
            font-size: 1.8rem;
        }
        
        .hackathon-title {
            color: #a388c5;
            font-weight: 300;
            margin-bottom: 1rem;
            font-size: 1.4rem;
        }
        
        /* New Countdown Styling */
        .countdown-title {
            color: #a388c5;
            font-weight: 600;
            font-size: 1.2rem;
            margin-bottom: 1rem;
        }
        
        .countdown-status {
            display: inline-block;
            font-size: 0.9rem;
            padding: 0.25rem 0.75rem;
            border-radius: 50px;
            font-weight: 500;
            margin-bottom: 1rem;
        }
        
        .status-active {
            background-color: rgba(16, 142, 233, 0.2);
            color: #40a9ff;
        }
        
        .status-ending {
            background-color: rgba(250, 173, 20, 0.2);
            color: #faad14;
        }
        
        .status-ended {
            background-color: rgba(245, 34, 45, 0.2);
            color: #ff4d4f;
        }
        
        .date-info {
            margin-bottom: 1.5rem;
        }
        
        .date-label {
            color: #a388c5;
            font-size: 0.85rem;
            display: block;
        }
        
        .date-value {
            color: #e9c7ff;
            font-size: 1rem;
            display: block;
            margin-bottom: 0.5rem;
        }
        
        /* Countdown Grid */
        .countdown-grid {
            display: grid;
            grid-auto-flow: column;
            grid-auto-columns: max-content;
            gap: 1rem;
            text-align: center;
            margin-bottom: 1.5rem;
        }
        
        .countdown-box {
            display: flex;
            flex-direction: column;
            padding: 1rem 1.5rem;
            background-color: rgba(0, 0, 0, 0.5);
            border-radius: 8px;
            color: white;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
            min-width: 90px;
            border: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .countdown-value {
            font-family: monospace;
            font-size: 2.8rem;
            line-height: 1;
            font-weight: 700;
            color: #40a9ff;
            min-width: 3ch;
            text-align: center;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
        }
        
        .time-critical .countdown-value {
            color: #ff4d4f;
        }
        
        .countdown-label {
            font-size: 0.85rem;
            color: #a388c5;
            margin-top: 0.5rem;
        }
        
        /* Countdown Progress */
        .countdown-progress {
            height: 4px;
            border-radius: 2px;
            overflow: hidden;
            background-color: rgba(255, 255, 255, 0.1);
            margin-top: 1rem;
        }
        
        .countdown-progress-bar {
            height: 100%;
            background-color: #40a9ff;
            transition: width 0.6s ease;
        }
        
        .time-critical .countdown-progress-bar {
            background-color: #ff4d4f;
        }
        
        /* Countdown Number Animation */
        .countdown-progress-bar::before {
            content: attr(data-progress);
            display: block;
            width: 100%;
            height: 100%;
            background-color: #40a9ff;
            transition: width 0.6s ease;
        }
        
        .time-critical .countdown-progress-bar::before {
            background-color: #ff4d4f;
        }
        
        .submission-alert {
            background-color: rgba(245, 34, 45, 0.15);
            color: #ff4d4f;
            border: 1px solid rgba(245, 34, 45, 0.3);
            border-radius: 4px;
            padding: 1rem;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 1rem;
        }
        
        .submission-alert i {
            font-size: 1.5rem;
        }
        
        .submission-alert-content {
            flex: 1;
        }
        
        .submission-alert-title {
            font-weight: 600;
            margin-bottom: 0.25rem;
            font-size: 1.1rem;
        }
        
        .submission-alert .btn-danger {
            background-color: #ff4d4f;
            border-color: #ff4d4f;
        }
        
        .submission-alert .btn-danger:hover {
            background-color: #ff7875;
            border-color: #ff7875;
        }

        /* Rest of existing styles below */
        .message-content {
            max-width: 75%;
            display: inline-block;
        }
        .messages {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }
        .chat-container {
            height: calc(100vh - 100px);
            overflow-y: auto;
        }
        .poll-card {
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            margin-bottom: 1rem;
        }
        .progress {
            background-color: #e9ecef;
            border-radius: 0.25rem;
        }
        .progress-bar {
            background-color: #007bff;
            color: white;
            text-align: center;
            font-size: 0.875rem;
            line-height: 20px;
            white-space: nowrap;
        }
        .badge-active {
            background-color: #28a745;
            color: white;
        }
        .badge-closed {
            background-color: #6c757d;
            color: white;
        }
        .polls-sidebar {
            position: fixed;
            right: 0;
            top: 0;
            height: 100vh;
            width: 300px;
            background: white;
            box-shadow: -2px 0 5px rgba(0,0,0,0.1);
            transform: translateX(100%);
            transition: transform 0.3s ease;
            z-index: 1000;
            padding: 1rem;
            overflow-y: auto;
        }
        .polls-sidebar.show {
            transform: translateX(0);
        }
        .toggle-polls {
            position: fixed;
            right: 20px;
            bottom: 20px;
            z-index: 1001;
        }
        /* New styling for messages */
        .message {
            margin-bottom: 15px;
            max-width: 75%;
        }
        .message-own {
            margin-right: auto;
            background-color: #f1f1f1;
            color: black;
            border-radius: 15px 15px 15px 0;
            padding: 10px 15px;
        }
        .message-own .text-muted {
            color: rgba(0, 0, 0, 0.6) !important;
        }
        .message-other {
            margin-left: auto;
            background-color: #007bff;
            color: white;
            border-radius: 15px 15px 0 15px;
            padding: 10px 15px;
        }
        .message-other .text-muted {
            color: rgba(255, 255, 255, 0.7) !important;
        }
        .option-input-group {
            display: flex;
            align-items: center;
        }
        .remove-option-btn {
            margin-left: 10px;
            color: #dc3545;
            cursor: pointer;
        }
        /* Enhanced Search Styles */
        .search-container {
            background-color: #f8f9fa;
            border-radius: 0.75rem;
            padding: 1.25rem;
            margin-bottom: 1rem;
            box-shadow: 0 4px 6px rgba(0,0,0,0.05);
        }
        .search-form {
            display: flex;
            gap: 0.5rem;
            transition: all 0.3s ease;
        }
        .search-form:focus-within {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        .search-form .input-group {
            width: 100%;
            border-radius: 30px;
            overflow: hidden;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
        }
        .search-form:focus-within .input-group {
            box-shadow: 0 4px 8px rgba(0,0,0,0.15);
        }
        .search-form .form-control {
            border-radius: 30px 0 0 30px;
            padding-left: 20px;
            border: none;
            height: 45px;
            transition: all 0.3s ease;
        }
        .search-form .form-control:focus {
            border-color: transparent;
            box-shadow: none;
        }
        .search-form .btn {
            border-radius: 0 30px 30px 0;
            padding: 0.5rem 1.25rem;
            transition: all 0.3s ease;
            background: linear-gradient(135deg, #0062cc 0%, #007bff 100%);
            border: none;
        }
        .search-form .btn:hover {
            transform: scale(1.05);
            background: linear-gradient(135deg, #007bff 0%, #0062cc 100%);
            box-shadow: 0 2px 10px rgba(0,123,255,0.3);
        }
        .search-form .btn i {
            margin-right: 5px;
            transition: all 0.3s ease;
        }
        .search-form .btn:hover i {
            animation: bounce 0.5s ease infinite;
        }
        @keyframes bounce {
            0%, 100% {
                transform: translateY(0);
            }
            50% {
                transform: translateY(-3px);
            }
        }
        .search-results {
            max-height: 400px;
            overflow-y: auto;
            display: none;
            background-color: white;
            border-radius: 0.75rem;
            padding: 0.5rem;
            margin-top: 1rem;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            animation: slideDown 0.3s ease;
        }
        @keyframes slideDown {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        .search-results.show {
            display: block;
        }
        .message-card {
            background-color: white;
            border-left: 4px solid #007bff;
            border-radius: 0.5rem;
            padding: 1rem;
            margin-bottom: 0.75rem;
            transition: all 0.3s ease;
            animation: fadeIn 0.5s ease;
            position: relative;
            overflow: hidden;
        }
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        .message-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        }
        .message-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, rgba(0,123,255,0.1) 0%, rgba(255,255,255,0) 100%);
            pointer-events: none;
        }
        .message-meta {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 0.75rem;
            border-bottom: 1px solid #f0f0f0;
            padding-bottom: 0.5rem;
        }
        .message-author {
            font-weight: bold;
            color: #333;
            font-size: 0.95rem;
        }
        .message-date {
            color: #6c757d;
            font-size: 0.75rem;
        }
        .message-chat {
            background-color: #f8f9fa;
            border-radius: 12px;
            padding: 0.35rem 0.7rem;
            font-size: 0.75rem;
            margin-bottom: 0.75rem;
            display: inline-block;
        }
        .message-content {
            line-height: 1.5;
            margin-bottom: 0.75rem;
        }
        .highlight {
            background-color: #ffffa3;
            padding: 0.15rem 0.3rem;
            border-radius: 0.2rem;
            font-weight: 500;
            box-shadow: 0 1px 2px rgba(0,0,0,0.1);
        }
        .view-message-btn {
            border-radius: 20px;
            font-size: 0.85rem;
            padding: 0.25rem 0.85rem;
            transition: all 0.3s ease;
        }
        .view-message-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        }
        /* Spinner Animation */
        .search-loading {
            animation: fadeIn 0.5s ease;
        }
        .spinner {
            margin: 0 auto;
            width: 70px;
            text-align: center;
        }
        .spinner > div {
            width: 18px;
            height: 18px;
            background-color: #007bff;
            border-radius: 100%;
            display: inline-block;
            animation: sk-bouncedelay 1.4s infinite ease-in-out both;
            margin: 0 3px;
        }
        .spinner .bounce1 {
            animation-delay: -0.32s;
            background-color: #0062cc;
        }
        .spinner .bounce2 {
            animation-delay: -0.16s;
            background-color: #007bff;
        }
        .spinner .bounce3 {
            background-color: #3498db;
        }
        @keyframes sk-bouncedelay {
            0%, 80%, 100% { 
                transform: scale(0);
            } 
            40% { 
                transform: scale(1.0);
            }
        }

        /* Countdown Styles */
        .countdown-container {
            display: flex;
            justify-content: center;
            gap: 1rem;
            margin: 2rem 0;
        }
        .countdown-item {
            background-color: #343a40;
            color: #dee2e6;
            border-radius: 0.5rem;
            padding: 1rem;
            text-align: center;
            min-width: 80px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
        }
        .countdown-number {
            font-family: monospace;
            font-size: 2.5rem;
            display: block;
            transition: opacity 0.3s ease;
            font-weight: bold;
            color: #fff;
        }
        .countdown-label {
            font-size: 0.875rem;
            color: #adb5bd;
            margin-top: 0.5rem;
            text-transform: uppercase;
        }
        .countdown-finished .countdown-item {
            background-color: #dc3545;
        }
        .countdown-title {
            text-align: center;
            margin-bottom: 1rem;
            color: #495057;
        }
        .countdown-end-date {
            text-align: center;
            color: #6c757d;
            font-size: 0.875rem;
            margin-top: 0.5rem;
        }

        /* Add specific countdown styles */
        #hackathon-countdown {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 8px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
        }

        #hackathon-countdown .countdown-box {
            text-align: center;
            background: rgba(0, 0, 0, 0.2);
            padding: 0.75rem;
            border-radius: 6px;
            margin: 0.5rem;
        }

        #hackathon-countdown .h2 {
            color: #fff;
            font-size: 2rem;
            font-weight: 700;
            margin: 0;
            line-height: 1;
        }

        #hackathon-countdown small {
            color: rgba(255, 255, 255, 0.7);
            font-size: 0.875rem;
        }

        /* Warning state styles */
        #hackathon-countdown.warning {
            background: rgba(220, 53, 69, 0.2);
            border: 1px solid rgba(220, 53, 69, 0.3);
        }

        #hackathon-countdown.warning .countdown-box {
            background: rgba(220, 53, 69, 0.3);
        }

        #hackathon-countdown.warning .h2 {
            color: #ff6b6b;
        }

        .submission-reminder {
            display: none;
            background: #dc3545;
            color: white;
            padding: 1rem;
            border-radius: 6px;
            margin-top: 1rem;
            text-align: center;
            animation: pulse 2s infinite;
        }

        .submission-reminder.show {
            display: block;
        }

        .submission-reminder a {
            color: white;
            text-decoration: underline;
            font-weight: bold;
        }

        .submission-reminder a:hover {
            color: rgba(255, 255, 255, 0.9);
        }

        @keyframes pulse {
            0% {
                transform: scale(1);
            }
            50% {
                transform: scale(1.02);
            }
            100% {
                transform: scale(1);
            }
        }
    </style>
{% endblock %}

{% block body %}
    <div class="container-fluid mt-4">
        <div class="row">
            <!-- Left Sidebar -->
            <div class="col-md-3">
                <!-- Hackathon Countdown -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h3 class="h4 mb-0">{{ communaute.nom }}</h3>
                    </div>
                    <div class="card-body bg-dark text-white">
                        <!-- Simplified Countdown -->
                        <div id="hackathon-countdown">
                            <h5 class="text-center mb-3">Time Until Hackathon Ends</h5>
                            <div class="d-flex justify-content-center gap-3">
                                <div class="countdown-box">
                                    <div id="days" class="h2 mb-0">00</div>
                                    <small>Days</small>
                                </div>
                                <div class="countdown-box">
                                    <div id="hours" class="h2 mb-0">00</div>
                                    <small>Hours</small>
                                </div>
                                <div class="countdown-box">
                                    <div id="minutes" class="h2 mb-0">00</div>
                                    <small>Minutes</small>
                                </div>
                                <div class="countdown-box">
                                    <div id="seconds" class="h2 mb-0">00</div>
                                    <small>Seconds</small>
                                </div>
                            </div>
                            <div class="text-center mt-2">
                                <small class="text-muted">Ends: {{ communaute.id_hackathon.date_fin|date('M d, Y H:i') }}</small>
                            </div>
                            <div id="submission-reminder" class="submission-reminder">
                                <i class="fas fa-exclamation-triangle me-2"></i>
                                Less than 24 hours remaining!<br>
                                <a href="#" class="mt-2 d-inline-block">Submit Your Project Now</a>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Search Box -->
                <div class="card mb-4">
                    <div class="card-header bg-primary text-white">
                        <h4 class="h5 mb-0"><i class="fas fa-search"></i> Search Messages</h4>
                    </div>
                    <div class="card-body search-container">
                        <form id="message-search-form" class="search-form">
                            <div class="input-group">
                                <input type="text" id="search-query" class="form-control" placeholder="Search messages...">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-search"></i> Search
                                </button>
                            </div>
                        </form>
                        <div id="search-results" class="search-results mt-3">
                            <!-- Search results will appear here -->
                        </div>
                    </div>
                </div>

                <!-- Available Chats -->
                <div class="card">
                    <div class="card-header">
                        <h4 class="h5 mb-0">Available Chats</h4>
                    </div>
                    <div class="list-group list-group-flush">
                        {% for chat in communaute.chats %}
                            <a href="#" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center chat-link" 
                               data-chat-id="{{ chat.id }}"
                               data-chat-name="{{ chat.nom }}"
                               data-chat-type="{{ chat.type }}">
                                {{ chat.nom }}
                                <span class="badge bg-primary rounded-pill">{{ chat.type }}</span>
                            </a>
                        {% endfor %}
                    </div>
                </div>
                
                <div class="mt-3">
                    <a href="{{ path('app_communaute_index') }}" class="btn btn-secondary w-100">Back to Communities</a>
                </div>
            </div>

            <!-- Chat Area -->
            <div class="col-md-9">
                <div id="chat-container" class="card">
                    <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                        <h4 class="mb-0" id="current-chat-name">Select a chat to start</h4>
                        <button type="button" class="btn btn-light btn-sm" data-bs-toggle="modal" data-bs-target="#createPollModal" id="create-poll-btn" style="display: none;">
                            <i class="fas fa-poll"></i> Create Poll
                        </button>
                    </div>
                    <div class="card-body">
                        <div id="messages-container" style="max-height: 600px; overflow-y: auto;">
                            <p class="text-center text-muted">Select a chat from the list to view messages</p>
                        </div>

                        <form id="message-form" class="mt-3" style="display: none;">
                            <input type="hidden" name="_token" value="{{ csrf_token('message_token') }}">
                            <div class="form-group">
                                <textarea class="form-control" name="contenu" rows="2" placeholder="Type your message..." required></textarea>
                            </div>
                            <div class="form-group mt-2">
                                <select class="form-control" name="type">
                                    <option value="QUESTION">Question</option>
                                    <option value="REPONSE">Response</option>
                                    <option value="SUGGESTION">Suggestion</option>
                                </select>
                            </div>
                            <button type="submit" class="btn btn-primary mt-2">Send Message</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Polls Sidebar -->
    <div class="polls-sidebar" id="polls-sidebar">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h5 class="card-title mb-0">Polls</h5>
            <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#createPollModal">
                <i class="fas fa-plus"></i> New Poll
            </button>
        </div>
        <div id="polls-container">
            <!-- Polls will be loaded here dynamically -->
        </div>
    </div>

    <!-- Toggle Polls Button -->
    <button class="btn btn-primary toggle-polls" id="toggle-polls">
        <i class="fas fa-poll"></i>
    </button>

    <!-- Create Poll Modal -->
    <div class="modal fade" id="createPollModal" tabindex="-1" aria-labelledby="createPollModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="createPollModalLabel">Create New Poll</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="create-poll-form">
                    <input type="hidden" name="_token" value="{{ csrf_token('poll_token') }}">
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="question" class="form-label">Poll Question</label>
                            <input type="text" class="form-control" id="question" name="question" required>
                        </div>
                        <div id="pollOptions" class="mb-3">
                            <div class="mb-2 option-input-group">
                                <div class="flex-grow-1">
                                    <label class="form-label">Option 1</label>
                                    <input type="text" class="form-control" name="options[]" required>
                                </div>
                            </div>
                            <div class="mb-2 option-input-group">
                                <div class="flex-grow-1">
                                    <label class="form-label">Option 2</label>
                                    <input type="text" class="form-control" name="options[]" required>
                                </div>
                            </div>
                        </div>
                        <button type="button" class="btn btn-secondary btn-sm" onclick="addOption()">
                            <i class="fas fa-plus"></i> Add Option
                        </button>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Create Poll</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        // Simplified debug log function that only logs to console
        function debugLog(message, data = null) {
            if (data) {
                console.log(message, data);
            } else {
                console.log(message);
            }
        }

        // Countdown initialization
        document.addEventListener('DOMContentLoaded', function() {
            const elements = {
                days: document.getElementById('days'),
                hours: document.getElementById('hours'),
                minutes: document.getElementById('minutes'),
                seconds: document.getElementById('seconds')
            };

            const countdownContainer = document.getElementById('hackathon-countdown');
            const submissionReminder = document.getElementById('submission-reminder');
            const endDate = new Date('{{ communaute.id_hackathon.date_fin|date('c') }}').getTime();

            function updateCountdown() {
                const now = new Date().getTime();
                const distance = endDate - now;

                if (distance < 0) {
                    Object.values(elements).forEach(el => {
                        if (el) el.textContent = '00';
                    });
                    countdownContainer.classList.add('warning');
                    submissionReminder.classList.add('show');
                    return;
                }

                const days = Math.floor(distance / (1000 * 60 * 60 * 24));
                const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                const seconds = Math.floor((distance % (1000 * 60)) / 1000);

                // Update elements if they exist
                if (elements.days) elements.days.textContent = String(days).padStart(2, '0');
                if (elements.hours) elements.hours.textContent = String(hours).padStart(2, '0');
                if (elements.minutes) elements.minutes.textContent = String(minutes).padStart(2, '0');
                if (elements.seconds) elements.seconds.textContent = String(seconds).padStart(2, '0');

                // Check if less than 24 hours remaining
                if (days === 0) {
                    countdownContainer.classList.add('warning');
                    submissionReminder.classList.add('show');
                } else {
                    countdownContainer.classList.remove('warning');
                    submissionReminder.classList.remove('show');
                }
            }

            // Initial update
            updateCountdown();

            // Update every second
            setInterval(updateCountdown, 1000);
        });

        // Chat functionality
        let currentChatId = null;
        let currentUserId = {{ app.user ? app.user.id : 'null' }};
        let communauteId = {{ communaute.id }};

        // Toggle polls sidebar
        document.getElementById('toggle-polls').addEventListener('click', function() {
            document.getElementById('polls-sidebar').classList.toggle('show');
        });

        // Handle chat selection
        document.querySelectorAll('.chat-link').forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                const chatId = this.dataset.chatId;
                const chatName = this.dataset.chatName;
                currentChatId = chatId;
                
                // Update UI
                document.getElementById('current-chat-name').textContent = chatName;
                document.getElementById('message-form').style.display = 'block';
                document.getElementById('create-poll-btn').style.display = 'block';
                
                // Load messages and polls
                loadChatContent(chatId);
            });
        });

        // Rest of the existing JavaScript for chat, polls, and search functionality
        // ... existing code ...
    </script>
{% endblock %} 